{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","res","json","users","setState","e","this","target","value","console","log","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAEaA,G,MAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAER,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,aCNjBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMG,QAAQM,KAAI,SAACN,GAChB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCL7BM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCPG,G,wDAvCX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTb,QAAS,GACTc,YAAa,IAGjB,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARV,E,gEAWO,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAErB,QAASoB,S,mCAGrCE,GACTC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,OAASC,QAAQC,IAAIJ,KAAKV,U,+BAG1D,IAAD,EAC4BU,KAAKV,MAA9Bb,EADH,EACGA,QAASc,EADZ,EACYA,YACXc,EAAmB5B,EAAQ6B,QAAO,SAAC7B,GAAD,OACpCA,EAAQG,KAAK2B,cAAcC,SAASjB,EAAYgB,kBAEpD,OACI,sBAAKhC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CACIU,YAAY,iBACZC,aAAcc,KAAKd,eAEvB,cAAC,EAAD,CAAUT,QAAS4B,W,GAlCjBI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a10a53b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n                alt=\"monster\"\r\n            />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport \"./card-list.styles.css\";\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monster.map((monster) => {\r\n                return <Card key={monster.id} monster={monster} />;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    );\r\n};\r\n","import { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monster: [],\n            searchField: \"\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((users) => this.setState({ monster: users }));\n    }\n\n    handleChange(e) {\n        this.setState({ searchField: e.target.value }, console.log(this.state));\n    }\n\n    render() {\n        const { monster, searchField } = this.state;\n        const filteredMonsters = monster.filter((monster) =>\n            monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <h1> Monster Rancher</h1>\n                <SearchBox\n                    placeholder=\"search monster\"\n                    handleChange={this.handleChange}\n                />\n                <CardList monster={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}